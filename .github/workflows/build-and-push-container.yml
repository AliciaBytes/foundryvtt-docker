---
name: Build container image and push to registries

on:
  push:
    branches:
      - "main"
  schedule:
    - cron: "0 1 * * 0" # every sunday at 1 am

env:
  IMAGE_NAME: foundryvtt

jobs:
  container:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static
      - name: Buildah Build
        id: build-image
        uses: redhat-actions/buildah-build@7a95fa7ee0f02d552a32753e7414641a04307056 # v2.13
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: latest
          archs: amd64, arm64
          containerfiles: |
            ./Dockerfile
      - name: Push to Quay.io
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: quay.io/aliciabytes
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
      - name: Push to Docker Hub
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: docker.io/${{ secrets.DOCKERHUB_USERNAME }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

  update-description:
    needs: [container]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # - name: push README to Quay.io
      #   uses: christian-korneck/update-container-description-action@v1
      #   env:
      #     DOCKER_APIKEY: ${{ secrets.QUAY_TOKEN }}
      #   with:
      #     destination_container_repo: quay.io/aliciabytes/${{ env.IMAGE_NAME }}
      #     provider: quay
      #     readme_file: "README.md"
      - name: push README to Dockerhub
        uses: christian-korneck/update-container-description-action@v1
        env:
          DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKERHUB_TOKEN }}
        with:
          destination_container_repo: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          provider: dockerhub
          short_description: ${{ github.event.repository.description }}
          readme_file: "README.md"
